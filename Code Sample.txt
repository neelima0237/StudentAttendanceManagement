  public static DateTime AddBusinessDays(this DateTime source, int businessDays)
        {
            var dayOfWeek = businessDays < 0
                                ? ((int)source.DayOfWeek - 12) % 7
                                : ((int)source.DayOfWeek + 6) % 7;

            switch (dayOfWeek)
            {
                case 6:
                    businessDays--;
                    break;
                case -6:
                    businessDays++;
                    break;
            }

            return source.AddDays(businessDays + ((businessDays + dayOfWeek) / 5) * 2);
        }

        public static int GetWorkingDays(this DateTime current, DateTime finishDateExclusive, List<DateTime> excludedDates)
        {
            Func<int, bool> isWorkingDay = days =>
            {
                var currentDate = current.AddDays(days);
                var isNonWorkingDay =
                    currentDate.DayOfWeek == DayOfWeek.Saturday ||
                    currentDate.DayOfWeek == DayOfWeek.Sunday ||
                    excludedDates.Exists(excludedDate => excludedDate.Date.Equals(currentDate.Date));
                return !isNonWorkingDay;
            };

            return Enumerable.Range(0, (finishDateExclusive - current).Days).Count(isWorkingDay);
        }
        private static List<DateTime> GetHolidays(int year)
        {
            List<DateTime> holidays = new List<DateTime>();
            //NEW YEARS 
            DateTime newYearsDate = AdjustForWeekendHoliday(new DateTime(year, 1, 1).Date);
            holidays.Add(newYearsDate);
            //MEMORIAL DAY  -- last monday in May 
            DateTime memorialDay = new DateTime(year, 5, 31);
            DayOfWeek dayOfWeek = memorialDay.DayOfWeek;
            while (dayOfWeek != DayOfWeek.Monday)
            {
                memorialDay = memorialDay.AddDays(-1);
                dayOfWeek = memorialDay.DayOfWeek;
            }
            holidays.Add(memorialDay.Date);

            //INDEPENCENCE DAY 
            DateTime independenceDay = AdjustForWeekendHoliday(new DateTime(year, 7, 4).Date);
            holidays.Add(independenceDay);

            //LABOR DAY -- 1st Monday in September 
            DateTime laborDay = new DateTime(year, 9, 1);
            dayOfWeek = laborDay.DayOfWeek;
            while (dayOfWeek != DayOfWeek.Monday)
            {
                laborDay = laborDay.AddDays(1);
                dayOfWeek = laborDay.DayOfWeek;
            }
            holidays.Add(laborDay.Date);

            //THANKSGIVING DAY - 4th Thursday in November 
            var thanksgiving = (from day in Enumerable.Range(1, 30)
                                where new DateTime(year, 11, day).DayOfWeek == DayOfWeek.Thursday
                                select day).ElementAt(3);
            DateTime thanksgivingDay = new DateTime(year, 11, thanksgiving);
            holidays.Add(thanksgivingDay.Date);

            DateTime christmasDay = AdjustForWeekendHoliday(new DateTime(year, 12, 25).Date);
            holidays.Add(christmasDay);
            //Martin Luther King Day -- third monday in January
            DateTime MLKDay = new DateTime(year, 1, 21);
            DayOfWeek mdayOfWeek = MLKDay.DayOfWeek;
            while (mdayOfWeek != DayOfWeek.Monday)
            {
                MLKDay = MLKDay.AddDays(-1);
                mdayOfWeek = MLKDay.DayOfWeek;
            }
            holidays.Add(MLKDay.Date);


            //President's Day -- third monday in February
            DateTime PresDay = new DateTime(year, 2, 21);
            dayOfWeek = PresDay.DayOfWeek;
            while (dayOfWeek != DayOfWeek.Monday)
            {
                PresDay = PresDay.AddDays(-1);
                dayOfWeek = PresDay.DayOfWeek;
            }
            holidays.Add(PresDay.Date);

            //Good Friday
            DateTime GoodFriday = EasterSunday(year).AddDays(-2);

            holidays.Add(GoodFriday);
            //Lincoln's BirthDAY 
            DateTime LincolnsBday = AdjustForWeekendHoliday(new DateTime(year, 2, 12).Date);
            holidays.Add(LincolnsBday);

            //VeternsDay
            DateTime Veternsday = new DateTime(year, 11, 11).Date;
            holidays.Add(Veternsday);

            //Columbus Day -- 2nd monday in October
            DateTime columbusday = new DateTime(year, 10, 14);
            dayOfWeek = columbusday.DayOfWeek;
            while (dayOfWeek != DayOfWeek.Monday)
            {
                columbusday = columbusday.AddDays(-1);
                dayOfWeek = columbusday.DayOfWeek;
            }
            holidays.Add(columbusday.Date);

             //BlackFriday-day after Thanks Giving
            holidays.Add(thanksgivingDay.Date.AddDays(1));
            return holidays;
        }

        public static DateTime AdjustForWeekendHoliday(DateTime holiday)
        {
            if (holiday.DayOfWeek == DayOfWeek.Saturday)
            {
                return holiday.AddDays(-1);
            }
            else if (holiday.DayOfWeek == DayOfWeek.Sunday)
            {
                return holiday.AddDays(1);
            }
            else
            {
                return holiday;
            }
        }
        public static DateTime EasterSunday(int year)
        {
            int day = 0;
            int month = 0;

            int g = year % 19;
            int c = year / 100;
            int h = (c - (int)(c / 4) - (int)((8 * c + 13) / 25) + 19 * g + 15) % 30;
            int i = h - (int)(h / 28) * (1 - (int)(h / 28) * (int)(29 / (h + 1)) * (int)((21 - g) / 11));

            day = i - ((year + (int)(year / 4) + i + 2 - c + (int)(c / 4)) % 7) + 28;
            month = 3;

            if (day > 31)
            {
                month++;
                day -= 31;
            }

            return new DateTime(month, day, year);
        }